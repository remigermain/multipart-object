!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).nestedMultiPart={})}(this,(function(t){"use strict";const e={separator:"mixedDot"};function i(t){return t instanceof Object&&!(t instanceof Blob||t instanceof Date)}function s(t,s=e){const r={},n="dot"==(null==(s=Object.assign(Object.assign({},e),s))?void 0:s.separator),o="mixed"==(null==s?void 0:s.separator),a="mixedDot"==(null==s?void 0:s.separator)||o;function l(t,e,i){return null==t?e:o&&"]"==t[t.length-1]&&!i?`${t}${e}`:n||a&&!i?`${t}.${e}`:`${t}[${e}]`}return function t(e,s){const n=Array.isArray(s),o=Object.keys(s);if(n&&0===s.length||i(s)&&0===o.length){const t=l(e,"",n);r[t]=null}else o.forEach((o=>{const a=s[o],h=l(e,o,n);Array.isArray(a)||i(a)?t(h,a):r[h]=a}))}(void 0,t),r}const r={separator:"mixedDot",throwDuplicate:!0,assignDuplicate:!1};function n(t){return"number"==typeof t||n._isDigit.test(t)}n._isDigit=new RegExp(/^\d+$/);t.NestedParser=class{constructor(t,e=r){this.data=t,this._valid=null,this._validateData={},this._errors=null,this.options=Object.assign(Object.assign({},r),e),this.isDot="dot"===this.options.separator,this.isMixed="mixed"===this.options.separator,this.isMixedDot="mixedDot"===this.options.separator,this.isMixedDot&&(this.isMixed=!0)}mixedSplit(t){function e(t,e){const s=e;for(;e!=t.length&&"."!=t[e]&&"]"!=t[e]&&"["!=t[e];)e++;if(s==e)throw new Error(`invalid format key '${i}', empty key value at position ${e+r}`);return e}const i=t;let s=e(t,0);const r=s,o=[t.substring(0,s)];t=t.substring(s,t.length);let a=0,l=!1;for(;a<t.length;)if("["==t[a]){if(a++,s=e(t,a),"]"!=t[s])throw new Error(`invalid format key '${i}', not end with bracket at position ${a+r}`);if(!n(t.substring(a,s)))throw new Error(`invalid format key '${i}', list key is not a valid number at position ${a+r}`);o.push(parseInt(t.substring(a,s))),a=s+1,l=!0}else{if("]"==t[a])throw new Error(`invalid format key '${i}', not start with bracket at position ${a+r}`);if(!("."==t[a]&&this.isMixedDot||!this.isMixedDot&&("."!=t[a]&&l||"."==t[a]&&!l)))throw new Error(`invalid format key '${i}', invalid char at position ${a+r}`);!this.isMixedDot&&l||a++,s=e(t,a),o.push(t.substring(a,s)),a=s,l=!1}return o}splitKey(t){if(t.replace(/\s+/g,"").length!=t.length)throw new Error(`key '${t}' is wrong formated, no space available`);if(this.isMixed)return this.mixedSplit(t);const e=this.isDot?/\./g:/\[|\]/g,i=this.isDot?1:2;let s=-i;const r=t.split(e).filter((t=>{if(t)return s+=t.length+i,t}));if(t.length!==s)throw new Error(`key "${t}" is wrong formated`);return r}constructDepth(t,e,i,s,r,n=!1){if(t instanceof Array){const s=this.isMixed?e:parseInt(e);if(t.length<s)throw new Error(`array indice '${s}' from key '${r}' is upper than actual array`);return t.length===s&&t.push(i),s}if(["number","string","boolean"].includes(typeof t)){if(this.options.throwDuplicate)throw new Error(`the key "${e}" as already set`);if(this.options.assignDuplicate)return(t=s.tmp)[s.key]=s.type,this.constructDepth(t[s.key],e,i,s,r,n)}else(!(e in t)||n&&this.options.assignDuplicate)&&(t[e]=i);return e}parse(t){const e={};return Object.keys(t).forEach((i=>{const s=this.splitKey(i);let r=e;const o={tmp:r,key:s[0],type:{}};for(let t=0;t<s.length-1;t++){const e=this.isMixed?"number"==typeof s[t+1]?[]:{}:n(s[t+1])?[]:{},a=this.constructDepth(r,s[t],e,o,i);o.tmp=r,o.key=a,o.type=e,r=r[a]}const a=t[i];this.constructDepth(r,s[s.length-1],a,o,i,!0)})),e}isValid(){this._valid=!1;try{this._validateData=this.parse(this.data),this._valid=!0}catch(t){this._errors=t}return this._valid}get validateData(){if(null===this._valid)throw new Error("You need to be call is_valid() before access validate_data");if(!1===this._valid)throw new Error("You can't get validate data");return this._validateData}get errors(){return this._errors}},t.toFormData=function(t,i=e){const r=s(t,i),n=new FormData;return Object.entries(r).forEach((([t,e])=>{e instanceof Blob||(e=String(e)),n.set(t,e)})),n},t.toObject=s,Object.defineProperty(t,"__esModule",{value:!0})}));
